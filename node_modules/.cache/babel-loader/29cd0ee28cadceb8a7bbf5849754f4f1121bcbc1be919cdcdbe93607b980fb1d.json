{"ast":null,"code":"/*!\n * @gsap/react 2.1.0\n * https://gsap.com\n *\n * Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nimport gsap from \"gsap\";\nlet useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect,\n  isConfig = value => value && !Array.isArray(value) && typeof value === \"object\",\n  emptyArray = [],\n  defaultConfig = {},\n  _gsap = gsap; // accommodates situations where different versions of GSAP may be loaded, so a user can gsap.registerPlugin(useGSAP);\n\nexport const useGSAP = (callback, dependencies = emptyArray) => {\n  let config = defaultConfig;\n  if (isConfig(callback)) {\n    config = callback;\n    callback = null;\n    dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n  } else if (isConfig(dependencies)) {\n    config = dependencies;\n    dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n  }\n  let {\n      scope,\n      revertOnUpdate\n    } = config,\n    [mounted, setMounted] = useState(false);\n  callback && typeof callback !== \"function\" && console.warn(\"First parameter must be a function or config object\");\n  const context = _gsap.context(() => {}, scope),\n    contextSafe = func => context.add(null, func),\n    cleanup = () => context.revert(),\n    deferCleanup = dependencies && dependencies.length && !revertOnUpdate;\n  useIsomorphicLayoutEffect(() => {\n    callback && context.add(callback, scope);\n    if (!deferCleanup || !mounted) {\n      // React renders bottom-up, thus there could be hooks with dependencies that run BEFORE the component mounts, thus cleanup wouldn't occur since a hook with an empty dependency Array would only run once the component mounts.\n      return cleanup;\n    }\n  }, dependencies);\n  deferCleanup && useIsomorphicLayoutEffect(() => {\n    setMounted(true);\n    return cleanup;\n  }, emptyArray);\n  return {\n    context,\n    contextSafe\n  };\n};\nuseGSAP.register = core => {\n  _gsap = core;\n};\nuseGSAP.headless = true; // doesn't require the window to be registered.","map":{"version":3,"names":["useEffect","useLayoutEffect","useState","gsap","useIsomorphicLayoutEffect","window","isConfig","value","Array","isArray","emptyArray","defaultConfig","_gsap","useGSAP","callback","dependencies","config","scope","revertOnUpdate","mounted","setMounted","console","warn","context","contextSafe","func","add","cleanup","revert","deferCleanup","length","register","core","headless"],"sources":["D:/Gsap Project/Portfolio/my-portfolio/node_modules/@gsap/react/src/index.js"],"sourcesContent":["/*!\n * @gsap/react 2.1.0\n * https://gsap.com\n *\n * Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nimport gsap from \"gsap\";\n\nlet useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect,\n    isConfig = value => value && !Array.isArray(value) && typeof(value) === \"object\",\n    emptyArray = [],\n    defaultConfig = {},\n    _gsap = gsap; // accommodates situations where different versions of GSAP may be loaded, so a user can gsap.registerPlugin(useGSAP);\n\nexport const useGSAP = (callback, dependencies = emptyArray) => {\n  let config = defaultConfig;\n  if (isConfig(callback)) {\n    config = callback;\n    callback = null;\n    dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n  } else if (isConfig(dependencies)) {\n    config = dependencies;\n    dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n  }\n  let { scope, revertOnUpdate } = config,\n      [mounted, setMounted] = useState(false);\n  (callback && typeof callback !== \"function\") && console.warn(\"First parameter must be a function or config object\");\n  const context = _gsap.context(() => { }, scope),\n        contextSafe = (func) => context.add(null, func),\n        cleanup = () => context.revert(),\n        deferCleanup = dependencies && dependencies.length && !revertOnUpdate;\n  useIsomorphicLayoutEffect(() => {\n    callback && context.add(callback, scope);\n    if (!deferCleanup || !mounted) { // React renders bottom-up, thus there could be hooks with dependencies that run BEFORE the component mounts, thus cleanup wouldn't occur since a hook with an empty dependency Array would only run once the component mounts.\n      return cleanup;\n    }\n  }, dependencies);\n  deferCleanup && useIsomorphicLayoutEffect(() => {\n      setMounted(true);\n      return cleanup;\n    }, emptyArray);\n  return { context, contextSafe };\n};\nuseGSAP.register = core => { _gsap = core; };\nuseGSAP.headless = true; // doesn't require the window to be registered.\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,OAAOC,IAAI,MAAM,MAAM;AAEvB,IAAIC,yBAAyB,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGJ,eAAe,GAAGD,SAAS;EACvFM,QAAQ,GAAGC,KAAK,IAAIA,KAAK,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAI,OAAOA,KAAM,KAAK,QAAQ;EAChFG,UAAU,GAAG,EAAE;EACfC,aAAa,GAAG,CAAC,CAAC;EAClBC,KAAK,GAAGT,IAAI,CAAC,CAAC;;AAElB,OAAO,MAAMU,OAAO,GAAGA,CAACC,QAAQ,EAAEC,YAAY,GAAGL,UAAU,KAAK;EAC9D,IAAIM,MAAM,GAAGL,aAAa;EAC1B,IAAIL,QAAQ,CAACQ,QAAQ,CAAC,EAAE;IACtBE,MAAM,GAAGF,QAAQ;IACjBA,QAAQ,GAAG,IAAI;IACfC,YAAY,GAAG,cAAc,IAAIC,MAAM,GAAGA,MAAM,CAACD,YAAY,GAAGL,UAAU;EAC5E,CAAC,MAAM,IAAIJ,QAAQ,CAACS,YAAY,CAAC,EAAE;IACjCC,MAAM,GAAGD,YAAY;IACrBA,YAAY,GAAG,cAAc,IAAIC,MAAM,GAAGA,MAAM,CAACD,YAAY,GAAGL,UAAU;EAC5E;EACA,IAAI;MAAEO,KAAK;MAAEC;IAAe,CAAC,GAAGF,MAAM;IAClC,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC1CY,QAAQ,IAAI,OAAOA,QAAQ,KAAK,UAAU,IAAKO,OAAO,CAACC,IAAI,CAAC,qDAAqD,CAAC;EACnH,MAAMC,OAAO,GAAGX,KAAK,CAACW,OAAO,CAAC,MAAM,CAAE,CAAC,EAAEN,KAAK,CAAC;IACzCO,WAAW,GAAIC,IAAI,IAAKF,OAAO,CAACG,GAAG,CAAC,IAAI,EAAED,IAAI,CAAC;IAC/CE,OAAO,GAAGA,CAAA,KAAMJ,OAAO,CAACK,MAAM,CAAC,CAAC;IAChCC,YAAY,GAAGd,YAAY,IAAIA,YAAY,CAACe,MAAM,IAAI,CAACZ,cAAc;EAC3Ed,yBAAyB,CAAC,MAAM;IAC9BU,QAAQ,IAAIS,OAAO,CAACG,GAAG,CAACZ,QAAQ,EAAEG,KAAK,CAAC;IACxC,IAAI,CAACY,YAAY,IAAI,CAACV,OAAO,EAAE;MAAE;MAC/B,OAAOQ,OAAO;IAChB;EACF,CAAC,EAAEZ,YAAY,CAAC;EAChBc,YAAY,IAAIzB,yBAAyB,CAAC,MAAM;IAC5CgB,UAAU,CAAC,IAAI,CAAC;IAChB,OAAOO,OAAO;EAChB,CAAC,EAAEjB,UAAU,CAAC;EAChB,OAAO;IAAEa,OAAO;IAAEC;EAAY,CAAC;AACjC,CAAC;AACDX,OAAO,CAACkB,QAAQ,GAAGC,IAAI,IAAI;EAAEpB,KAAK,GAAGoB,IAAI;AAAE,CAAC;AAC5CnB,OAAO,CAACoB,QAAQ,GAAG,IAAI,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}